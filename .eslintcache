[{"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\index.js":"1","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\App.js":"2","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\TopPage.js":"4","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Switch.js":"5","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Headers.js":"6","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\SearchForm.js":"7","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Results.js":"8","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\utils\\API.js":"9","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\movieColumn.js":"10","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\MovieColumn.js":"11","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\MovieRow.js":"12","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Footer.js":"13","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\NominationButton.js":"14","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\RemoveNominationButton.js":"15","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Snackbar.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":3768,"mtime":1609725723488,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":2274,"mtime":1609706416544,"results":"21","hashOfConfig":"18"},{"size":1876,"mtime":1609640686777,"results":"22","hashOfConfig":"18"},{"size":724,"mtime":1609706189611,"results":"23","hashOfConfig":"18"},{"size":1270,"mtime":1609693322797,"results":"24","hashOfConfig":"18"},{"size":2070,"mtime":1609725654104,"results":"25","hashOfConfig":"18"},{"size":197,"mtime":1609649292895,"results":"26","hashOfConfig":"18"},{"size":542,"mtime":1609631829921,"results":"27","hashOfConfig":"28"},{"size":3094,"mtime":1609725660348,"results":"29","hashOfConfig":"18"},{"size":447,"mtime":1609637869322,"results":"30","hashOfConfig":"18"},{"size":415,"mtime":1609644856731,"results":"31","hashOfConfig":"18"},{"size":436,"mtime":1609694459250,"results":"32","hashOfConfig":"18"},{"size":442,"mtime":1609694470506,"results":"33","hashOfConfig":"18"},{"size":1565,"mtime":1609723983301,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"a9wlee",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7fcpfi",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\index.js",[],["72","73"],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\App.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\TopPage.js",["74"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types'\r\nimport CustomizedSwitches from './Switch';\r\nimport Headers from './Headers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      height: '22vh',\r\n      width: '100%',\r\n      overflow: 'hidden',\r\n      marginTop: 64,\r\n      backgroundColor: '#DADED4',\r\n      color: '#3C403D',\r\n    },\r\n    bigHeader: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: '#3C403D',\r\n    },\r\n}));\r\n\r\n\r\nconst TopPage = props => {\r\n    \r\n    const classes = useStyles();\r\n    const gold = React.useRef(false);\r\n    const [state, setState] = React.useState({ title: 'Search for Movies' });\r\n    \r\n    function handleTitleChange(isNom) {\r\n        if (!isNom) {\r\n            setState({ ...state, title: 'Search for Movies'});\r\n            props.handleSwitch(true);\r\n        } else {\r\n            setState({ ...state, title: 'Your Nominations'});\r\n            props.handleSwitch(false);\r\n        }\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        if (props.gold !== undefined) {\r\n            gold.current = props.gold;\r\n            setState({ ...state, gold: gold.current });\r\n        }\r\n    }, [props.gold])\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <CustomizedSwitches handleTitleChange={handleTitleChange}/>\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.bigHeader}>\r\n                    <Headers variant=\"h2\" component=\"h2\">{state.title}</Headers>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    {state.gold === false\r\n                    ? <Headers variant=\"h4\" component=\"h4\">{props.totalNominations}/5 <br/>Nominations</Headers>\r\n                    : <Headers variant=\"h4\" component=\"h4\">{props.totalNominations}/5 <br/>Nominations</Headers> }\r\n                     {/*make the bottom one gold  */}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nTopPage.propTypes = {\r\n    title: PropTypes.string,\r\n    gold: PropTypes.bool,\r\n}\r\n\r\nexport default TopPage\r\n","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Switch.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Headers.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\SearchForm.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Results.js",["75"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MovieColumn from './MovieColumn';\r\nimport MovieRow from './MovieRow';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nconst Results = props => {\r\n    const classes = useStyles();\r\n\r\n    let colArr = [];\r\n    let rowArr = [];\r\n    let movieChilds = [];\r\n    let len;\r\n    let movie;\r\n    if (props.results && props.display === true) {\r\n        \r\n        if (props.results.data.Search) {\r\n            len = props.results.data.Search.length;\r\n            movie = props.results.data.Search;\r\n        }\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            colArr.push(<MovieColumn \r\n                            data={movie[i]} \r\n                            calcNoms={props.calcNoms}/>)\r\n    \r\n            if (colArr.length === 3) {\r\n                rowArr.push(colArr);\r\n                colArr = [];\r\n            } else if (len === i+1) {\r\n                rowArr.push(colArr);\r\n            }\r\n        }\r\n        for (let movieGroup of rowArr) {\r\n            movieChilds.push(<MovieRow>{movieGroup}</MovieRow>);\r\n        }\r\n\r\n    } else if (props.nominations) {\r\n\r\n        len = props.nominations.length;\r\n        movie = props.nominations;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            colArr.push(<MovieColumn data={movie[i]} calcNoms={props.calcNoms}/>)\r\n    \r\n            if (colArr.length === 3) {\r\n                rowArr.push(colArr);\r\n                colArr = [];\r\n            } else if (len === i+1) {\r\n                rowArr.push(colArr);\r\n            }\r\n        }\r\n        for (let movieGroup of rowArr) {\r\n            movieChilds.push(<MovieRow>{movieGroup}</MovieRow>);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {movieChilds}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nResults.propTypes = {\r\n    results: PropTypes.object\r\n}\r\n\r\nexport default Results\r\n","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\utils\\API.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\movieColumn.js",["76"],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\MovieColumn.js",["77"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport Image from 'material-ui-image'\r\nimport { Typography } from '@material-ui/core';\r\nimport Headers from './Headers';\r\nimport NominationButton from './NominationButton';\r\nimport RemoveNominationButton from './RemoveNominationButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textAlign: 'center',\r\n    },\r\n    poster: {\r\n        objectFit: 'contain !important', \r\n        // marginBottom: '16px',\r\n    },\r\n    textDiv: {\r\n        height: \"12vh\"\r\n    },\r\n    paper: {\r\n        padding: 8,\r\n    },\r\n}));\r\n\r\nexport default function MovieColumn(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [state, setState ] = React.useState({ \r\n        imdbID: props.data.imdbID,\r\n        Title: props.data.Title,\r\n        Year: props.data.Year,\r\n        Poster: props.data.Poster,\r\n        isNominated: false,\r\n    });\r\n\r\n    function handleNominationLimit() {\r\n        \r\n        if (Object.keys(localStorage).length >= 5) {\r\n            return true;\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    function handleNomination() {\r\n        if (handleNominationLimit() === true) return;\r\n        localStorage.setItem(JSON.stringify(state.imdbID), JSON.stringify({\r\n            imdbID: state.imdbID,\r\n            Title: state.Title,\r\n            Year: state.Year,\r\n            Poster: state.Poster,\r\n        }));\r\n        setState({ ...state, isNominated: true });\r\n        console.log(Object.keys(localStorage))\r\n        props.calcNoms();\r\n    }\r\n\r\n    function handleRemoveNomination() {\r\n        localStorage.removeItem(JSON.stringify(state.imdbID));\r\n        setState({ ...state, isNominated: false });\r\n        props.calcNoms();\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n        let checkNomination = localStorage.getItem(JSON.stringify(state.imdbID));\r\n        if (checkNomination !== null) setState({ ...state, isNominated: true })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Grid item xs={4} key={props.data.imdbID}>\r\n            <Paper elevation={1} className={classes.paper} variant=\"elevation\">\r\n                <div className={classes.textDiv}>\r\n                    <Headers variant=\"h5\" component=\"h5\">{props.data.Title}</Headers>\r\n                    <Typography>{props.data.Year}</Typography>\r\n                </div>\r\n                <Image \r\n                    className={classes.poster} \r\n                    src={props.data.Poster} \r\n                    alt={props.data.Title + '\\'s Movie Poster'}\r\n                    animationDuration=\"1000\" />\r\n                <br/>\r\n                {state.isNominated === true \r\n                ? <RemoveNominationButton click={handleRemoveNomination}/> \r\n                : <NominationButton click={handleNomination}/>}\r\n                <br/>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nMovieColumn.propTypes = {\r\n\r\n}\r\n","C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\MovieRow.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Footer.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\NominationButton.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\RemoveNominationButton.js",[],"C:\\Users\\cochr\\Desktop\\challenges\\ShopifyFrontEnd\\src\\components\\Snackbar.js",["78","79"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(4),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n    });\r\n\r\n    const { vertical, horizontal } = state;\r\n\r\n    React.useEffect(() => {\r\n        setOpen(props.open);\r\n    }, [props.open])\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n        props.close();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar \r\n                open={open} \r\n                autoHideDuration={6000} \r\n                onClose={handleClose} \r\n                key={vertical + horizontal}\r\n                anchorOrigin={{ vertical, horizontal }}>\r\n                <Alert onClose={handleClose} severity={props.severity}> \r\n                {props.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":47,"column":8,"nodeType":"86","endLine":47,"endColumn":20,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":16,"column":11,"nodeType":"90","messageId":"91","endLine":16,"endColumn":18},{"ruleId":"88","severity":1,"message":"92","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":17},{"ruleId":"88","severity":1,"message":"92","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"88","severity":1,"message":"93","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"94","line":23,"column":19,"nodeType":"90","messageId":"91","endLine":23,"endColumn":27},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["97"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'Button' is defined but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [props.gold, state]",{"range":"100","text":"101"},[1295,1307],"[props.gold, state]"]